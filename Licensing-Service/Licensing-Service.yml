server:
   port: 4567
tracer:
   property: "I AM THE DEFAULT"
management.endpoints.web.exposure.include: '*'
management.endpoint.health.show-details: always

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 4
      minimumNumberOfCalls: 1
      slidingWindowType: COUNT_BASED
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 60s
      failureRateThreshold: 10
      eventConsumerBufferSize: 10
      slowCallDurationThreshold: 1000
      slowCallRateThreshold: 2
     
resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 2
      waitDuration: 100
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException

resilience4j.bulkhead:
  configs:
    default:
      maxConcurrentCalls: 100

resilience4j.thread-pool-bulkhead:
  configs:
    default:
      maxThreadPoolSize: 4
      coreThreadPoolSize: 2
      queueCapacity: 2

resilience4j.ratelimiter:
  configs:
    default:
      registerHealthIndicator: false
      limitForPeriod: 10
      limitRefreshPeriod: 1s
      timeoutDuration: 0
      eventConsumerBufferSize: 100
spring:
#Rest of properties removed for conciseness
    cloud.stream.bindings.consumeStream-in-0.destination: orgChangeTopic
    cloud.stream.bindings.consumeStream-in-0.content-type: application/json
    cloud.stream.bindings.consumeStream-in-0.group: licensingGroup
    cloud.stream.kafka.binder.zkNodes: localhost
    cloud.stream.kafka.binder.brokers: localhost
    cloud.stream.kafka.binder.replication-factor: 1
    datasource:
        driver-class-name: org.postgresql.Driver
        password: p0stgr@s
        url: jdbc:postgresql://localhost:5432/POSTGRESQL
        username: postgres
    jpa:
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
                temp:
                    use_jdbc_metadata_defaults: false
        show-sql: true
   # security:
    #  oauth2:
     #    resourceserver:
      #      jwt:
       #         issuer-uri: http://localhost:8080/auth/realms/SpringBootKeycloakApp

management:
    endpoints:
        web:
            exposure:
                include: '*'
eureka:
    client:
        fetch-registry: true
        register-with-eureka: true
        service-url:
            default-zone: http://localhost:8761/eureka/
    instance:
        prefer-ip-address: true                
license:
   dsc:
      prfx: Refresh Srvc
   dsa:
      prfx: In Arabic
keycloak.realm: SpringBootKeycloakApp
keycloak.auth-server-url: http://localhost:8080/auth
keycloak.ssl-required: external
keycloak.resource: SpringBoot-MicroService
keycloak.credentials.secret: 397f65b3-a418-4db9-afda-5d20e2c4af52
keycloak.use-resource-role-mappings: true
keycloak.bearer-only: true 
redis.server = localhost
redis.port = 6379
